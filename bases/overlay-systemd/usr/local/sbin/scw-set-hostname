#!/bin/bash

set -euo pipefail

: ${old_hostname:="$(hostnamectl --static  | tr -d -c '[:graph:]')"}
: ${new_hostname:="$(scw-metadata HOSTNAME | tr -d -c '[:graph:]')"}
readonly -- old_hostname new_hostname

# Before anything risky, try to set a hostname to get a usable environment.

if [[ -z "${new_hostname}" ]]; then
	exit 2
fi

if [[ "${old_hostname}" != "${new_hostname}" ]]; then
	hostnamectl set-hostname "${new_hostname}"
fi

# Only then attempt any file modifications, which might fail for reasons unrelated to naming.

if ! [[ -s /etc/hosts ]]; then
	</etc/hosts.default sed -e "s@server@${new_hostname}@g" >/etc/hosts
	exit 0
fi

if [[ ! -z "${old_hostname}" ]] && \
   [[ "${old_hostname}" != *"/"* ]] && \
   [[ "${old_hostname}" != "localhost"* ]] && \
   grep -m 1 -q "${old_hostname}" /etc/hosts;
then
	sed -i -e "s@${old_hostname}@${new_hostname}@g" /etc/hosts
else
	printf "127.0.0.1\t%s\n" "${new_hostname}" >>/etc/hosts
fi
